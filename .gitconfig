[alias]
	pretty = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	pretty2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)' --abbrev-commit
	fmdiff = difftool -y -t FileMerge
	pushf = push --force-with-lease
	fpush = push --force-with-lease
	trymerge = "!f() { git merge --no-commit "$1" || echo FAILED, please choose an earlier commit; echo Undoing changes; git merge --abort; }; f"
	stashed-update = "!f() { git stash && git pull && (git stash pop || :); }; f"
	stashed-svn-update = "!f() { git stash && git svn rebase && (git stash pop || :); }; f"

[core]
	autocrlf = false

[credential]
	# These are tried in succession
	helper = filcab
	#helper = osxkeychain
	#helper = wincred
	#helper = cache

[diff]
	algorithm = histogram
[difftool "FileMerge"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
[merge]
	conflictstyle = diff3
	tool = vimdiff
[mergetool "fugitive"]  # vim-fugitive mergetool from https://vi.stackexchange.com/questions/3985/git-mergetool-vimdiff-command
	  cmd = vim "+Gdiff" $MERGED

# Test diff-highlight, which should be a bit better than regular word highlight
[pager]
	log = ~/.zsh.d/bin/diff-highlight | less -R
	show = ~/.zsh.d/bin/diff-highlight | less -R
	diff = ~/.zsh.d/bin/diff-highlight | less -R

[pull]
	rebase = true
[push]
	default = simple
[user]
	name = Filipe Cabecinhas

# From: https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0
# for $deity's sake, check that anything we're getting is complete and sane on
# a regular basis
[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
[receive]
	fsckObjects = true
