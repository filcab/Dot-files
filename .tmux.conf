# Change the prefix key
unbind C-b
set -g prefix C-t
bind-key t send-prefix
bind-key C-t last-window

# Sean Silva's trick for opening new panes/windows in the cwd for the
# current window:
# The `-c '#{pane_current_path}'` trick is from:
# http://unix.stackexchange.com/a/12091
bind-key '%' split-window -h -c '#{pane_current_path}'
bind-key '"' split-window -v -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'

# vi keys for copy mode
setw -g mode-keys vi
set -g status-keys vi

# From Sean Silva's tmux.conf:
# make vi-copy mode more vi-like
bind-key -t vi-copy v begin-selection # enter 'visual mode'
bind-key -t vi-copy y copy-selection # 'yank'
bind-key -t vi-copy C-v rectangle-toggle # as usual in vim
unbind-key -t vi-copy Space # old begin-selection
unbind-key -t vi-copy Enter # old copy-selection

# history stuff
bind-key C-l clear-history \; refresh-client
set -g history-limit 10000
bind C-k send-keys C-l \; clear-history

# Use terminal scrollback and setup the usual color overrides (per manpage)
set -g terminal-overrides 'xterm*:smcup@:rmcup@,*256col*:colors=256,xterm*:XT'

# Notifying if other windows has activities
setw -g monitor-activity on
# Don't nag us on activity on other windows.
#set -g visual-activity on

# Set status bar
set -g status-bg black
set -g status-fg white
#set -g status-left ""
#set -g status-right "#[fg=green]#H"

# Highlighting the active window in status bar
setw -g window-status-current-bg red

setw -g clock-mode-style 24


# Start window numbering at 1
set -g base-index 1

# tell tmux to advertise a 256 colour terminal
set -g default-terminal "screen-256color"


# To check out:
##################################################
### window
###################################################
##unbind %
#bind | split-window -v
##unbind '"'
#bind - split-window -h
#
## navigate windows using hl, and ctrl-hl (no prefix)
#bind-key -r h select-window -t :-
#bind-key -r l select-window -t :+
#bind-key -nr C-h select-window -t :-
#bind-key -nr C-l select-window -t :+
#
## Ctrl-Left/Right cycles thru windows (no prefix)
#bind-key -n "C-Left"  select-window -t :-
#bind-key -n "C-Right" select-window -t :+
###################################################


unbind-key l
bind-key L last-window
##################################################
### pane
###################################################
## navigate panes using hjkl, and ctrl+hjkl (no prefix)
bind-key -r h select-pane -L
#bind-key -nr C-h select-pane -L
bind-key -r j select-pane -D
#bind-key -nr C-j select-pane -D
bind-key -r k select-pane -U
#bind-key -nr C-k select-pane -U
bind-key -r l select-pane -R
#bind-key -nr C-l select-pane -R

## Ctrl-Up/Down cyles thru panes (no prefix)
#bind-key -n "C-Up"   select-pane -t :.-
#bind-key -n "C-Down" select-pane -t :.+
#
## Cycle to next pane
#bind-key -r Tab select-pane -t :.+
#
## swap panes
#bind-key -r J swap-pane -D
#bind-key -r K swap-pane -U

# resize pane with arrow keys
# -r: can be repeated without pressing prefix
#     again (500ms after last '-r' action or prefix)
unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2

## window layouts (emacs-like)
##bind-key 1 break-pane
##bind-key 2 select-layout even-vertical
##bind-key 3 select-layout even-horizontal
##bind-key o select-pane -U
#

# Center the window list
set -g status-justify centre

# Amount of time for which status line messages are displayed (ms)
set -g display-time 2000

# Set ability to capture on start and restore on exit window data when
# running an application
set -g alternate-screen on

#set -g status-bg default
##set -g status-left "#[fg=cyan]:#[fg=blue]: #[fg=red][ #[fg=green]#H
##[fg=red]]#[default]"
##set -g status-left-length 20
##set -g status-right-length 25
##set -g status-right "#[fg=red][ #[fg=green]%H:%M #[fg=magenta]%a %m-%d
##[fg=red]] #[fg=blue]:#[fg=cyan]:#[default]" 
#
##setw -g window-status-format '#[fg=blue,bold]#I #T#[default] '
##setw -g window-status-current-format '#[fg=blue,bold,reverse]#I
##T#[default] '
##setw -g window-status-alert-fg re
#
## window title
## enable wm window titles
#set-option -g set-titles on


# Window title: enable WM window titles
set-option -g set-titles on

# WM window title string (uses statusbar variables)
# window number,program name,active (or not)
set-option -g set-titles-string '#S:#I.#P #W'


set-window-option -g automatic-rename on

# default statusbar colors
# set -g status-fg black
# set -g status-bg green
# set -g status-attr default
#
# # default window title colors
# setw -g window-status-fg black
# setw -g window-status-bg default
# setw -g window-status-attr dim
#
# # active window title colors
# setw -g window-status-current-fg black
# setw -g window-status-current-bg red
# #setw -g window-status-current-attr bright
# setw -g window-status-current-attr underscore 
#
# # command/message line colors
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright,blink
#
# # clock
# set-window-option -g clock-mode-colour cyan
# set-window-option -g clock-mode-style 24



