#!/usr/bin/env python3

from __future__ import print_function

import distutils.spawn
import os
import subprocess
import sys


def msg(*args, **kwargs):
    # default to sys.stdout, otherwise we pollute the helper's output
    file = kwargs.pop("file", sys.stderr)
    print(*args, file=file, **kwargs)


# Hack for WSL:
if "linux" in sys.platform:
    # If we're on Linux and the windows helper exists, use that
    winhelper = (
        "/mnt/c/Program Files/Git/mingw64/libexec/git-core/git-credential-wincred.exe"
    )
    if os.path.isfile(winhelper):
        cmd = [winhelper, *sys.argv[1:]]
        msg(f"winhelper: executing: {cmd}")
        sys.exit(subprocess.run(cmd))


# FIXME: Current WSL (as of Win10 1809) seems to advertise as linux, not linux2)
d = {"darwin": "osxkeychain", "linux": "cache", "linux2": "cache", "win32": "wincred"}
helper_name = d[sys.platform]

if helper_name == "cache":
    helper = ["git", "credential-cache"]
else:
    helper_name = "git-credential-{}".format(helper_name)
    helper = [distutils.spawn.find_executable(helper_name)]

cmd = helper + sys.argv[1:]
msg(f"helper: executing: {cmd}")
sys.exit(subprocess.run(cmd))
